{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset128 Times New Roman;}{\f4\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f5\fswiss\fprq2\fcharset128 Arial;}{\f6\fnil\fprq0\fcharset128 arial{\*\falt sans-serif};}{\f7\froman\fprq0\fcharset128 Times New Roman;}{\f8\fnil\fprq0\fcharset128 Arial{\*\falt sans-serif};}{\f9\fnil\fprq0\fcharset128 Arial{\*\falt Helvetica};}{\f10\fswiss\fprq2\fcharset128 Droid Sans Fallback;}{\f11\fnil\fprq2\fcharset128 Lohit Hindi;}{\f12\fnil\fprq0\fcharset128 Lohit Hindi;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red128\green0\blue0;\red34\green34\blue34;\red68\green68\blue68;\red87\green143\blue178;\red128\green128\blue128;}
{\stylesheet{\s0\snext0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\ltrpar\cf0\kerning1\hich\af10\langfe2052\dbch\af11\afs24\lang1081\loch\f3\fs24\lang1033 Normal;}
{\*\cs15\snext15 RTF_Num 2 1;}
{\*\cs16\snext16 RTF_Num 2 2;}
{\*\cs17\snext17 RTF_Num 2 3;}
{\*\cs18\snext18 RTF_Num 2 4;}
{\*\cs19\snext19 RTF_Num 2 5;}
{\*\cs20\snext20 RTF_Num 2 6;}
{\*\cs21\snext21 RTF_Num 2 7;}
{\*\cs22\snext22 RTF_Num 2 8;}
{\*\cs23\snext23 RTF_Num 2 9;}
{\*\cs24\snext24\hich\af4\dbch\af4\loch\f4 RTF_Num 3 1;}
{\*\cs25\snext25\hich\af4\dbch\af4\loch\f4 RTF_Num 3 2;}
{\*\cs26\snext26\hich\af4\dbch\af4\loch\f4 RTF_Num 3 3;}
{\*\cs27\snext27\hich\af4\dbch\af4\loch\f4 RTF_Num 3 4;}
{\*\cs28\snext28\hich\af4\dbch\af4\loch\f4 RTF_Num 3 5;}
{\*\cs29\snext29\hich\af4\dbch\af4\loch\f4 RTF_Num 3 6;}
{\*\cs30\snext30\hich\af4\dbch\af4\loch\f4 RTF_Num 3 7;}
{\*\cs31\snext31\hich\af4\dbch\af4\loch\f4 RTF_Num 3 8;}
{\*\cs32\snext32\hich\af4\dbch\af4\loch\f4 RTF_Num 3 9;}
{\*\cs33\snext33 RTF_Num 4 1;}
{\*\cs34\snext34 RTF_Num 4 2;}
{\*\cs35\snext35 RTF_Num 4 3;}
{\*\cs36\snext36 RTF_Num 4 4;}
{\*\cs37\snext37 RTF_Num 4 5;}
{\*\cs38\snext38 RTF_Num 4 6;}
{\*\cs39\snext39 RTF_Num 4 7;}
{\*\cs40\snext40 RTF_Num 4 8;}
{\*\cs41\snext41 RTF_Num 4 9;}
{\*\cs42\snext42\b\ab Strong Emphasis;}
{\*\cs43\snext43 Numbering Symbols;}
{\*\cs44\snext44\cf2\ul\ulc0\langfe255\lang255 Internet Link;}
{\*\cs45\snext45\hich\af4\dbch\af4\loch\f4 Bullets;}
{\*\cs46\snext46\cf3\ul\ulc0\langfe255\lang255 Visited Internet Link;}
{\s47\sbasedon0\snext48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\kerning1\hich\af10\langfe2052\dbch\af11\loch\f5\fs28\lang1033 Heading;}
{\s48\sbasedon0\snext48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033 Text body;}
{\s49\sbasedon48\snext49{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af12\loch\f3\fs24\lang1033 List;}
{\s50\sbasedon0\snext50{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb120\sa120\cf0\i\kerning1\hich\af3\langfe2052\dbch\af12\ai\loch\f3\fs24\lang1033 Caption;}
{\s51\sbasedon0\snext51{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af3\langfe2052\dbch\af12\loch\f3\fs24\lang1033 Index;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi0\li0}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi0\li707}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li1414}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li2121}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li2828}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li3535}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li4242}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li4949}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li5656}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li6363}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi0\li0}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li2121}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li2828}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li3535}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li4242}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li4949}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li5656}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\dbch\af4\fi-283\li6363}\listid3}
{\list\listtemplateid4
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-432\li432}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-576\li576}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-720\li720}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-864\li864}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1008\li1008}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1152\li1152}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1296\li1296}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1440\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'00;}{\levelnumbers;}\fi-1584\li1584}\listid4}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}{\info{\author jai }{\creatim\yr2012\mo1\dy19\hr12\min49}{\author jai }{\revtim\yr2012\mo1\dy25\hr4\min20}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern3400}}\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\scaps0\caps0\cf1\expnd0\expndtw0\i0\b\ai0\ab\rtlch \ltrch\loch\loch\f7
Problem F: Frequent values}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\cf1\b\ab\rtlch \ltrch\loch\loch\f7
Given a set of input find the maximum occurancing element in range I to j. (several queries)}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f7
There are several ways to answer range maximum queries:}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  1.\tab}\ilvl0\ls1 \li707\ri0\lin707\rin0\fi0\tx707\li707\ri0\lin707\rin0\fi0\sb0\sa0{\cf1\rtlch \ltrch\loch\loch\f7
by checking all values in the range, which is too slow for the given limits}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  2.\tab}\ilvl0\ls1 \li707\ri0\lin707\rin0\fi0\tx707\li707\ri0\lin707\rin0\fi0\sb0\sa0{\cf1\rtlch \ltrch\loch\loch\f7
Using a binary tree data structure which has the frequency values as leaves and for each inner node stores the maximum of its two children. This data structure can be built in O(n) and queries can be answered in O(log n). An implementation can be found\~   }{{\field{\*\fldinst HYPERLINK "http://www.informatik.uni-ulm.de/acm/Locals/2007/solution/frequent.cpp" }\scaps0\caps0\cf3\expnd0\expndtw0\i0\ul\ulc0\b0\langfe255\ai0\ab0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255\loch\f7
here}}}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  3.\tab}\ilvl0\ls1 \li707\ri0\lin707\rin0\fi0\tx707\li707\ri0\lin707\rin0\fi0\sb0\sa0{\cf1\rtlch \ltrch\loch\loch\f7
Precalculating the answers for range sizes which are a power of 2. This step needs O(n log n). Then, each query can be answered in constant time, using the fact that each query size can be covered by two (possibly overlapping) queries with ranges which are a power of 2.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  4.\tab}\ilvl0\ls1 \li707\ri0\lin707\rin0\fi0\tx707\li707\ri0\lin707\rin0\fi0\sb0\sa0{\cf1\rtlch \ltrch\loch\loch\f7
Divide the frequency array into blocks of size sqrt(n). Precalculate the answer for each block (overall O(n)). Then, each query can be answered by a linear scan of the precalculated results of the blocks completely inside the query range, and also scanning the parts of the query range not covered by the blocks. This leads to a complexity of O(sqrt(n)) for each query.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  5.\tab}\ilvl0\ls1 \li707\ri0\lin707\rin0\fi0\tx707\li707\ri0\lin707\rin0\fi0\sb0\sa0{\cf1\rtlch \ltrch\loch\loch\f7
Sorting the queries by left end point. Then, we go through the frequency values from back to front, maintaining a list of indices of the next improvement (bigger frequency value). To answer a query with the left end point corresponding to the current frequency value, we can do a binary search for the largest improvement index \uc3 \u8804\'e2\'89\'a4 the right end point of the query range. Since the list of improvement indices is usually small, this runs quite fast, but in the worst case a query still needs O(log n). An implementation can be found\~   \uc1 }{{\field{\*\fldinst HYPERLINK "http://www.informatik.uni-ulm.de/acm/Locals/2007/solution/other/frequent2.cpp" }\scaps0\caps0\cf2\expnd0\expndtw0\i0\ul\ulc0\b0\langfe255\ai0\ab0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255\loch\f7
here}{\rtlch \ltrch\loch
}}.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  6.\tab}\ilvl0\ls1 \li707\ri0\lin707\rin0\fi0\tx707\li707\ri0\lin707\rin0\fi0{\cf1\rtlch \ltrch\loch\loch\f7
It is possible to answer range maximum queries optimally with queries in constant time and O(n) precalculation. More information can be found\~   }{{\field{\*\fldinst HYPERLINK "http://www.bio.ifi.lmu.de/~fischer/fischer07new.pdf" }\scaps0\caps0\cf2\expnd0\expndtw0\i0\ul\ulc0\b0\langfe255\ai0\ab0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255\loch\f7
here}{\rtlch \ltrch\loch
}}.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f7
It is also possible to process the given input values directly. Again, we have to do some preprocessing to be able to answer queries efficiently. One such possible solution (similar to approach number 2 above) builds a binary tree with following information for each node in the tree:}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl0\ls2 \li707\ri0\lin707\rin0\fi0\sb0\sa0{\cf1\rtlch \ltrch\loch\loch\f7
The maximum frequency in the range covered by the node.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl0\ls2 \li707\ri0\lin707\rin0\fi0\sb0\sa0{\cf1\rtlch \ltrch\loch\loch\f7
The frequency of the first value in the range.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl0\ls2 \li707\ri0\lin707\rin0\fi0{\cf1\rtlch \ltrch\loch\loch\f7
The frequency of the last value in the range.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\cf1\rtlch \ltrch\loch\loch\f7
An implementation can be found\~   }{{\field{\*\fldinst HYPERLINK "http://www.informatik.uni-ulm.de/acm/Locals/2007/solution/other/walter_frequent.cc" }\scaps0\caps0\cf2\expnd0\expndtw0\i0\ul\ulc0\b0\langfe255\ai0\ab0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\lang255\loch\f7
here}{\rtlch \ltrch\loch
}}.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\ltrpar\cf0\kerning1\hich\af10\langfe2052\dbch\af11\afs24\lang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\ltrpar\cf0\kerning1\hich\af10\langfe2052\dbch\af11\afs24\lang1081\loch\f3\fs24\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\widctlpar\li0\ri0\lin0\rin0\fi0{{\field{\*\fldinst HYPERLINK "http://www.codechef.com/JAN12/problems/GAPFILL/" }\scaps0\caps0\cf6\strike0\expnd0\expndtw0\i0\ulnone\ulc0\b\animtext0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\fs18\loch\f8
GAPFILL}{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b\rtlch \ltrch\loch\fs18\loch\f8
}}\~ (written by\~ }{{\field{\*\fldinst HYPERLINK "http://www.codechef.com/users/yellow_agony/" }\scaps0\caps0\cf6\strike0\expnd0\expndtw0\i0\ulnone\ulc0\b\animtext0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\fs18\loch\f8
Nikhil Garg}{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b\rtlch \ltrch\loch\fs18\loch\f8
}})}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
This was the first problem I wrote for Codechef and I'm glad so many people could solve it. I hope it was fun solving it :)}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
As I understand, many people tried to find the pattern and did some guess work. Here I provide a fully combinatorial solution to the problem. I wont be surprised if a shorter (& smarter) solution exists.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
Call OP1(i,j) the operation given in problem statement applied at cell(i,j). Trick to solve this problem is to be able to break OP1 in simpler operations with same power.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
Before counting number of solvable configurations, we need to first characterise solvable configurations. Lets try to look at different cases:}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  1.\tab}\ilvl0\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b\rtlch \ltrch\loch\fs18\loch\f9
Case 1\~ }{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
: Both sides even}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
This is the easiest of all the cases. By a smart sequence of moves( shown below), we can toggle any given cell without changing any of the other cells. By this we can solve any initial configuration of the board. Hence in case when N & M are both even answer is 2^(N*M).}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
If you want to toggle cell (i,j) : Press switch in all those cells which are in same row or column as that of(i,j). Note (i,j) is to be pressed exactly once. This results only cell(i,j) getting flipped.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  2.\tab}\ilvl0\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b\rtlch \ltrch\loch\fs18\loch\f9
Case 2\~ }{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
: 1 side even, 1 side odd.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
Without loss of generality assume number of rows is even and number of columns is odd. This case is tougher to analyze as all configurations are not solvable. However one can represent OP1 as a sequence of moves of following two operations:}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
OP2 : Flip one whole column}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
OP3 : Flip any row keeping any one element of this row unchanged.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
Also both OP2 & OP3 can be created by sequence of moves of OP1(Find that, as homework ;-] ). Hence a board is solvable by OP1 move iff its solvable by OP2 & OP3 moves. Now take a solvable configuration and list the sequence of OP2 & OP3 moves that solve it. No operation as before is repeated on same location. Hence all moves are independent & we can change their order. Bring all OP2 moves before before all OP3 moves. When all OP2 moves have ended look at grid. As OP3 operation can't change parity of ones in any row so each row much have an even number of 1s already. Now flip each row exactly as many times as there are 1s in it with not flipping those cells which have a 1 in them at this stage. All 1s get flipped odd times ( total 1s (even) - 1(for ownself) ). Also all 0s get flipped even times hence whole row is 0.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
So now what could've happened in column phase ? A single column flips parity of all rows so all rows should've started with same parity. Convince yourself that this is in fact an if and only if condition. So only those configurations are solvable that have same parity in all rows. Counting it is not so tough. There are two choices for parity of first row : odd or even. Here is a combinatorial way of counting the same. Fill up first N-1 cells of first row arbitrarily. If parity of these N-1 match option chosen before keep Nth cell blank else put 1 in it. So number of ways of making a row have even(or odd) parity is 2^(N-1). As all rows have same parity, so for all rows number of ways of getting odd (or even) parity is : 2^( (N-1) * M). And as we have option of choosing even or odd : final answer is 2 * (2^ ((N-1) *M))}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain  3.\tab}\ilvl0\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b\rtlch \ltrch\loch\fs18\loch\f9
Case 3\~ }{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
: Both sides odd.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
As before one can represnt OP1 as sequence of moves of two operations :}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
OP4 : Flip whole grid}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
OP5 : Flip any two rows while keeping 1 same column element unchanged in both}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
Try to represent OP1 using OP4 & OP5. Also try to represent OP4 using OP1 & similarly OP5 using OP1. As before each row should've even number of 1s as OP5 can't change parity. Similarly another decomposition of OP1 is using following 2 moves :}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
OP4 : Flip whole grid}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033{\listtext\pard\plain \hich\af4\dbch\af4\loch\f4 \'95\tab}\ilvl1\ls3 \li0\ri0\lin0\rin0\fi0\qj\widctlpar\tx0\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f9
OP6 : Flip any two columns while keeping 1 same row element unchanged in both.}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
So by this, all columns too should've even number of ones. As grid flip is also allowed, so it suffices if each row and each column has same parity. This is infact an if and only if condition, convince yourself. Counting number of configurations where each row and each column has same parity is not so easy. Here is a combinatorial solution : Take N-1 * M-1 subgrid leaving last row and last column. Fill up this grid arbitrarily. Further suppose we wish to make parity of each row or column odd. So for each column if parity is even put 1 in last row of same column else keep it zero. Do same for rows. By now parity of last row and last column is same. If its even put 1 at (N,M) the cell else let it stay 0. So number of configurations which have odd parity in all rows and columns is 2 ^ ( ( N-1) * (M-1) ). As even parity case is similar (bijection being flipping of the grid), total number of solvable configurations are 2 * ( 2 ^( (N-1) * (M-1) ) )}
\par \pard\plain \s48{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
Problem Setter's\~ }{{\field{\*\fldinst HYPERLINK "http://www.codechef.com/download/Solutions/2012/January/Setter/GAPFILL.cpp" \\t "_blank" }\scaps0\caps0\cf6\strike0\expnd0\expndtw0\i0\ulnone\ulc0\b0\animtext0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\fs18\loch\f8
solution}{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
}}.\line Problem Tester's\~ }{{\field{\*\fldinst HYPERLINK "http://www.codechef.com/download/Solutions/2012/January/Tester/GAPFILL.c" \\t "_blank" }\scaps0\caps0\cf6\strike0\expnd0\expndtw0\i0\ulnone\ulc0\b0\animtext0{\fldrslt \cf2\ul\ulc0\langfe255\lang255\rtlch \ltrch\loch\fs18\loch\f8
solution}{\scaps0\caps0\cf5\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs18\loch\f8
}}.}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\ltrpar\cf0\kerning1\hich\af10\langfe2052\dbch\af11\afs24\lang1081\loch\f3\fs24\lang1033\widctlpar\li0\ri0\lin0\rin0\fi0{\scaps0\caps0\cf4\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs19\loch\f6
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\ltrpar\cf0\kerning1\hich\af10\langfe2052\dbch\af11\afs24\lang1081\loch\f3\fs24\lang1033\widctlpar\li0\ri0\lin0\rin0\fi0{\scaps0\caps0\cf4\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs19\loch\f6
}
\par \pard\plain \s0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\ltrpar\cf0\kerning1\hich\af10\langfe2052\dbch\af11\afs24\lang1081\loch\f3\fs24\lang1033\widctlpar\li0\ri0\lin0\rin0\fi0{\scaps0\caps0\cf4\expnd0\expndtw0\i0\b0\rtlch \ltrch\loch\fs19\loch\f6
}
\par }